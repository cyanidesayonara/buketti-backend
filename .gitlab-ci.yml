stages:
  - cache
  - build
  - test
  - build image
  - deploy staging

variables:
  PROJECT_NAME: buketti-backend
  CONTAINER_REGISTRY: registry.gitlab.valtori.fi/vm-private/buketti-backend

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
  policy: pull

update cache:
  stage: cache
  image: node:16-alpine
  cache:
    <<: *global_cache
    policy: push
  only:
    - schedules
  script:
    - npm install

build:
  stage: build
  image: node:16-alpine
  except:
    - schedules
  before_script:
    - node -v
    - npm -v
  script:
    - npm install

test build:
  stage: test
  image: node:16-alpine
  except:
    - schedules
  before_script:
    - node -v
    - npm -v
    - npm install
    - apk add --no-cache curl
  script:
    - npm run lint
    - npm run test
    - npm run dev &
    - timeout 60 sh -c -- 'until curl -LIs http://localhost:8000 |grep -q "200 OK" && echo "Server responded 200 OK" ; do sleep 1 ; done'

build and push image:
  stage: build image
  cache: {}
  except:
    - schedules
  before_script:
    - docker -v
  script:
    - docker build -t ${CI_PROJECT_TITLE}:${CI_COMMIT_SHORT_SHA} .
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker image tag ${CI_PROJECT_TITLE}:${CI_COMMIT_SHORT_SHA} ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_TITLE}:${CI_COMMIT_SHORT_SHA}
    - docker image push ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_TITLE}:${CI_COMMIT_SHORT_SHA}
  after_script:
    - docker logout ${CI_REGISTRY}

deploy staging:
  stage: deploy staging
  cache: {}
  except:
    - schedules
  before_script:
    - docker -v
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker run --name ${CI_PROJECT_TITLE} -p 8000:8000 -d ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_TITLE}:${CI_COMMIT_SHORT_SHA}
  after_script:
    - docker logout ${CI_REGISTRY}
